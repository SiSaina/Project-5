@using Microsoft.AspNetCore.Identity
@using ExamProjectOne.Data
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{        
    var user = await UserManager.GetUserAsync(User);
    if (user != null)
    {
        var roles = await UserManager.GetRolesAsync(user);
        var currentRole = GlobalRoleManager.ActiveRole ?? roles.FirstOrDefault();

        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle fs-5" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                @currentRole
            </a>
            <ul class="dropdown-menu" aria-labelledby="roleDropdown">
                @foreach (var role in roles) 
                {
                    <li>
                        <form method="post" asp-controller="Account" asp-action="SwitchRole">
                            <input type="hidden" name="role" value="@role" />
                            <button type="submit" class="dropdown-item">@role</button>
                        </form>
                    </li>
                }
            </ul>
        </li>

        <li class="nav-item">
            <a class="nav-link text-dark fs-5" asp-area="Identity" asp-page="/Account/Manage/Index">@user.UserName</a>
        </li>
    }
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark fs-5">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark fs-5" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark fs-5" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
